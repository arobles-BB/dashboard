import {
  themeRegistry
} from "./chunk-FZIWHSOX.js";
import {
  unsafeCSS
} from "./chunk-TZPBKG4Y.js";
import "./chunk-EWT3K5KQ.js";
import {
  DomModule,
  stylesFromTemplate
} from "./chunk-PN57JW3E.js";
import "./chunk-FHJNRKKV.js";
import "./chunk-PHKVH5MM.js";
import "./chunk-GWBPVOL2.js";

// node_modules/.pnpm/@vaadin/polymer-legacy-adapter@22.0.2/node_modules/@vaadin/polymer-legacy-adapter/src/style-modules.js
var moduleIdIndex = 0;
function registerStyles(themeFor, styles = [], options = {}) {
  const themeId = options.moduleId || `custom-style-module-${moduleIdIndex++}`;
  const module = document.createElement("dom-module");
  if (themeFor) {
    module.setAttribute("theme-for", themeFor);
  }
  const includeStylesToTemplate = !!(styles.length && options.moduleId);
  const moduleIncludes = [].concat(options.include || []);
  if (moduleIncludes.length === 0) {
    module.__allStyles = styles;
  } else if (!includeStylesToTemplate) {
    module.__partialStyles = styles;
  }
  module.innerHTML = `
    <template>
      ${moduleIncludes.map((include) => `<style include=${include}></style>`)}
      ${includeStylesToTemplate ? `<style>${styles.map((style) => style.cssText).join("\n")}</style>` : ""}
    </template>
  `;
  module.register(themeId);
}
function getModuleStyles(module) {
  return stylesFromTemplate(module.querySelector("template")).map((styleElement) => {
    return unsafeCSS(styleElement.textContent);
  });
}
function getAllThemes() {
  const domModule = DomModule;
  const modules = domModule.prototype.modules;
  return Object.keys(modules).map((moduleId) => {
    const module = modules[moduleId];
    const themeFor = module.getAttribute("theme-for");
    module.__allStyles = module.__allStyles || getModuleStyles(module).concat(module.__partialStyles || []);
    return {
      themeFor,
      moduleId,
      styles: module.__allStyles
    };
  });
}
window.Vaadin = window.Vaadin || {};
window.Vaadin.styleModules = {
  getAllThemes,
  registerStyles
};
if (themeRegistry && themeRegistry.length > 0) {
  themeRegistry.forEach((theme) => {
    registerStyles(theme.themeFor, theme.styles, {
      moduleId: theme.moduleId,
      include: theme.include
    });
  });
  themeRegistry.length = 0;
}
/**
 * @license
 * Copyright (c) 2021 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_polymer-legacy-adapter_style-modules_js.js.map
