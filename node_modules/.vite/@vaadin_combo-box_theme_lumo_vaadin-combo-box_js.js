import {
  ComboBoxDataProviderMixin,
  ComboBoxMixin
} from "./chunk-XUHLS7HG.js";
import "./chunk-6DGU3HZI.js";
import "./chunk-24YLUY5X.js";
import "./chunk-L2R5HW6B.js";
import {
  PatternMixin
} from "./chunk-43QNQDZ4.js";
import "./chunk-IU242RMT.js";
import {
  InputControlMixin,
  inputFieldShared as inputFieldShared2
} from "./chunk-W64WW7UW.js";
import {
  inputFieldShared
} from "./chunk-LXLTQWPM.js";
import {
  InputController
} from "./chunk-YXC7JNSV.js";
import {
  LabelledInputController
} from "./chunk-PXVMLDOO.js";
import "./chunk-BC5TXSNW.js";
import "./chunk-VTG563PB.js";
import "./chunk-7ORJFUKA.js";
import "./chunk-KXJXXHGH.js";
import "./chunk-4JKHCVK2.js";
import "./chunk-NWSNWTJQ.js";
import "./chunk-MVMJ7OQF.js";
import "./chunk-7WSTJGYG.js";
import "./chunk-CSA2HJ5Z.js";
import "./chunk-Y5NNYWHZ.js";
import "./chunk-5YJRHVYL.js";
import "./chunk-RA7SNJPZ.js";
import "./chunk-F75XGNCT.js";
import "./chunk-VXX3KNUF.js";
import "./chunk-IKTX77KG.js";
import "./chunk-EHF6M5CD.js";
import "./chunk-KFEHHBXX.js";
import "./chunk-GLSLTN6S.js";
import "./chunk-5SUV3F4B.js";
import "./chunk-WAPH3RCZ.js";
import "./chunk-O5ESTK6D.js";
import "./chunk-7TGUML2V.js";
import "./chunk-3GXLJMXG.js";
import "./chunk-XLE2I272.js";
import "./chunk-CGDXGGUU.js";
import "./chunk-6AKUT5DS.js";
import "./chunk-QLGGGSH6.js";
import "./chunk-3MLIVFGU.js";
import "./chunk-AHAAGCFC.js";
import "./chunk-LAGIZBPC.js";
import {
  ElementMixin
} from "./chunk-QS3SH3AF.js";
import "./chunk-4CGZWSB2.js";
import "./chunk-235CFYIT.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-FZIWHSOX.js";
import "./chunk-MQRWSCDX.js";
import "./chunk-JZ7X4XI4.js";
import {
  css
} from "./chunk-TZPBKG4Y.js";
import "./chunk-EWT3K5KQ.js";
import {
  PolymerElement
} from "./chunk-RZW6ORFJ.js";
import {
  html
} from "./chunk-5VJMXRGB.js";
import "./chunk-XALJ24ZG.js";
import "./chunk-GN24F3WZ.js";
import "./chunk-HDWYYSVS.js";
import "./chunk-PN57JW3E.js";
import "./chunk-FHJNRKKV.js";
import "./chunk-PHKVH5MM.js";
import "./chunk-GWBPVOL2.js";

// node_modules/.pnpm/@vaadin/combo-box@22.0.2/node_modules/@vaadin/combo-box/theme/lumo/vaadin-combo-box-styles.js
var comboBox = css`
  :host {
    outline: none;
  }

  [part='toggle-button']::before {
    content: var(--lumo-icons-dropdown);
  }
`;
registerStyles("vaadin-combo-box", [inputFieldShared, comboBox], { moduleId: "lumo-combo-box" });

// node_modules/.pnpm/@vaadin/combo-box@22.0.2/node_modules/@vaadin/combo-box/src/vaadin-combo-box.js
registerStyles("vaadin-combo-box", inputFieldShared2, { moduleId: "vaadin-combo-box-styles" });
var ComboBox = class extends ComboBoxDataProviderMixin(ComboBoxMixin(PatternMixin(InputControlMixin(ThemableMixin(ElementMixin(PolymerElement)))))) {
  static get is() {
    return "vaadin-combo-box";
  }
  static get template() {
    return html`
      <style>
        :host([opened]) {
          pointer-events: auto;
        }
      </style>

      <div class="vaadin-combo-box-container">
        <div part="label">
          <slot name="label"></slot>
          <span part="required-indicator" aria-hidden="true" on-click="focus"></span>
        </div>

        <vaadin-input-container
          part="input-field"
          readonly="[[readonly]]"
          disabled="[[disabled]]"
          invalid="[[invalid]]"
          theme$="[[theme]]"
        >
          <slot name="prefix" slot="prefix"></slot>
          <slot name="input"></slot>
          <div id="clearButton" part="clear-button" slot="suffix"></div>
          <div id="toggleButton" part="toggle-button" slot="suffix"></div>
        </vaadin-input-container>

        <div part="helper-text">
          <slot name="helper"></slot>
        </div>

        <div part="error-message">
          <slot name="error-message"></slot>
        </div>
      </div>

      <vaadin-combo-box-dropdown
        id="dropdown"
        opened="[[opened]]"
        renderer="[[renderer]]"
        position-target="[[_positionTarget]]"
        _focused-index="[[_focusedIndex]]"
        _item-id-path="[[itemIdPath]]"
        _item-label-path="[[itemLabelPath]]"
        loading="[[loading]]"
        theme="[[theme]]"
      ></vaadin-combo-box-dropdown>
    `;
  }
  static get properties() {
    return {
      _positionTarget: {
        type: Object
      }
    };
  }
  get clearElement() {
    return this.$.clearButton;
  }
  ready() {
    super.ready();
    this.addController(new InputController(this, (input) => {
      this._setInputElement(input);
      this._setFocusElement(input);
      this.stateTarget = input;
      this.ariaTarget = input;
    }));
    this.addController(new LabelledInputController(this.inputElement, this._labelNode));
    this._positionTarget = this.shadowRoot.querySelector('[part="input-field"]');
    this._toggleElement = this.$.toggleButton;
  }
  _setFocused(focused) {
    super._setFocused(focused);
    if (!focused) {
      this.validate();
    }
  }
  _shouldRemoveFocus(event) {
    if (event.relatedTarget === this.$.dropdown.$.overlay) {
      event.composedPath()[0].focus();
      return false;
    }
    return true;
  }
  _onClearButtonClick(event) {
    event.stopPropagation();
    this._handleClearButtonClick(event);
  }
};
customElements.define(ComboBox.is, ComboBox);
/**
 * @license
 * Copyright (c) 2021 Vaadin Ltd.
 * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
 */
//# sourceMappingURL=@vaadin_combo-box_theme_lumo_vaadin-combo-box_js.js.map
