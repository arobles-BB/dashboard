{
  "version": 3,
  "sources": ["../.pnpm/@vaadin/upload@22.0.2/node_modules/@vaadin/upload/src/vaadin-upload-icons.js", "../.pnpm/@vaadin/upload@22.0.2/node_modules/@vaadin/upload/src/vaadin-upload-file.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2021 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst $_documentContainer = document.createElement('template');\n\n$_documentContainer.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-upload-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,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) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild($_documentContainer.content);\n", "/**\n * @license\n * Copyright (c) 2021 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/progress-bar/src/vaadin-progress-bar.js';\nimport './vaadin-upload-icons.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-upload-file>` element represents a file in the file list of `<vaadin-upload>`.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ---|---\n * `row` | File container\n * `info` | Container for file status icon, file name, status and error messages\n * `done-icon` | File done status icon\n * `warning-icon` | File warning status icon\n * `meta` | Container for file name, status and error messages\n * `name` | File name\n * `error` | Error message, shown when error happens\n * `status` | Status message\n * `commands` | Container for file command icons\n * `start-button` | Start file upload button\n * `retry-button` | Retry file upload button\n * `remove-button` | Remove file button\n * `progress`| Progress bar\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part name\n * ---|---|---\n * `error` | An error has happened during uploading | `:host`\n * `indeterminate` | Uploading is in progress, but the progress value is unknown | `:host`\n * `uploading` | Uploading is in progress | `:host`\n * `complete` | Uploading has finished successfully | `:host`\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @mixes ThemableMixin\n */\nclass UploadFile extends ThemableMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        [hidden] {\n          display: none;\n        }\n\n        [part='row'] {\n          list-style-type: none;\n        }\n\n        button {\n          background: transparent;\n          padding: 0;\n          border: none;\n          box-shadow: none;\n        }\n      </style>\n\n      <div part=\"row\">\n        <div part=\"info\">\n          <div part=\"done-icon\" hidden$=\"[[!file.complete]]\" aria-hidden=\"true\"></div>\n          <div part=\"warning-icon\" hidden$=\"[[!file.error]]\" aria-hidden=\"true\"></div>\n\n          <div part=\"meta\">\n            <div part=\"name\" id=\"name\">[[file.name]]</div>\n            <div part=\"status\" hidden$=\"[[!file.status]]\" id=\"status\">[[file.status]]</div>\n            <div part=\"error\" id=\"error\" hidden$=\"[[!file.error]]\">[[file.error]]</div>\n          </div>\n        </div>\n        <div part=\"commands\">\n          <button\n            type=\"button\"\n            part=\"start-button\"\n            file-event=\"file-start\"\n            on-click=\"_fireFileEvent\"\n            hidden$=\"[[!file.held]]\"\n            aria-label$=\"[[i18n.file.start]]\"\n            aria-describedby=\"name\"\n          ></button>\n          <button\n            type=\"button\"\n            part=\"retry-button\"\n            file-event=\"file-retry\"\n            on-click=\"_fireFileEvent\"\n            hidden$=\"[[!file.error]]\"\n            aria-label$=\"[[i18n.file.retry]]\"\n            aria-describedby=\"name\"\n          ></button>\n          <button\n            type=\"button\"\n            part=\"remove-button\"\n            file-event=\"file-abort\"\n            on-click=\"_fireFileEvent\"\n            aria-label$=\"[[i18n.file.remove]]\"\n            aria-describedby=\"name\"\n          ></button>\n        </div>\n      </div>\n\n      <vaadin-progress-bar\n        part=\"progress\"\n        id=\"progress\"\n        value$=\"[[_formatProgressValue(file.progress)]]\"\n        error$=\"[[file.error]]\"\n        indeterminate$=\"[[file.indeterminate]]\"\n        uploading$=\"[[file.uploading]]\"\n        complete$=\"[[file.complete]]\"\n      ></vaadin-progress-bar>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-upload-file';\n  }\n\n  static get properties() {\n    return {\n      file: Object,\n\n      i18n: Object\n    };\n  }\n\n  static get observers() {\n    return [\n      '_fileAborted(file.abort)',\n      '_toggleHostAttribute(file.error, \"error\")',\n      '_toggleHostAttribute(file.indeterminate, \"indeterminate\")',\n      '_toggleHostAttribute(file.uploading, \"uploading\")',\n      '_toggleHostAttribute(file.complete, \"complete\")'\n    ];\n  }\n\n  /** @private */\n  _fileAborted(abort) {\n    if (abort) {\n      this._remove();\n    }\n  }\n\n  /** @private */\n  _remove() {\n    this.dispatchEvent(\n      new CustomEvent('file-remove', {\n        detail: { file: this.file },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  /** @private */\n  _formatProgressValue(progress) {\n    return progress / 100;\n  }\n\n  /** @private */\n  _fireFileEvent(e) {\n    e.preventDefault();\n    return this.dispatchEvent(\n      new CustomEvent(e.target.getAttribute('file-event'), {\n        detail: { file: this.file },\n        bubbles: true,\n        composed: true\n      })\n    );\n  }\n\n  /** @private */\n  _toggleHostAttribute(value, attributeName) {\n    const shouldHave = Boolean(value);\n    const has = this.hasAttribute(attributeName);\n    if (has !== shouldHave) {\n      if (shouldHave) {\n        this.setAttribute(attributeName, '');\n      } else {\n        this.removeAttribute(attributeName);\n      }\n    }\n  }\n\n  /**\n   * Fired when the retry button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-retry\n   * @param {Object} detail\n   * @param {Object} detail.file file to retry upload of\n   */\n\n  /**\n   * Fired when the start button is pressed. It is listened by `vaadin-upload`\n   * which will start a new upload process of this file.\n   *\n   * @event file-start\n   * @param {Object} detail\n   * @param {Object} detail.file file to start upload of\n   */\n\n  /**\n   * Fired when abort button is pressed. It is listened by `vaadin-upload` which\n   * will abort the upload in progress, but will not remove the file from the list\n   * to allow the animation to hide the element to be run.\n   *\n   * @event file-abort\n   * @param {Object} detail\n   * @param {Object} detail.file file to abort upload of\n   */\n\n  /**\n   * Fired after the animation to hide the element has finished. It is listened\n   * by `vaadin-upload` which will actually remove the file from the upload\n   * file list.\n   *\n   * @event file-remove\n   * @param {Object} detail\n   * @param {Object} detail.file file to remove from the  upload of\n   */\n}\n\ncustomElements.define(UploadFile.is, UploadFile);\n\nexport { UploadFile };\n"],
  "mappings": ";;;;;;;;;;;AAAA,AAKA,IAAM,sBAAsB,SAAS,cAAc;AAEnD,oBAAoB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWhC,SAAS,KAAK,YAAY,oBAAoB;;;AClB9C,AA8CA,+BAAyB,cAAc,gBAAgB;AAAA,aAC1C,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA2EE,KAAK;AACd,WAAO;AAAA;AAAA,aAGE,aAAa;AACtB,WAAO;AAAA,MACL,MAAM;AAAA,MAEN,MAAM;AAAA;AAAA;AAAA,aAIC,YAAY;AACrB,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,EAKJ,aAAa,OAAO;AAClB,QAAI,OAAO;AACT,WAAK;AAAA;AAAA;AAAA,EAKT,UAAU;AACR,SAAK,cACH,IAAI,YAAY,eAAe;AAAA,MAC7B,QAAQ,EAAE,MAAM,KAAK;AAAA,MACrB,SAAS;AAAA,MACT,UAAU;AAAA;AAAA;AAAA,EAMhB,qBAAqB,UAAU;AAC7B,WAAO,WAAW;AAAA;AAAA,EAIpB,eAAe,GAAG;AAChB,MAAE;AACF,WAAO,KAAK,cACV,IAAI,YAAY,EAAE,OAAO,aAAa,eAAe;AAAA,MACnD,QAAQ,EAAE,MAAM,KAAK;AAAA,MACrB,SAAS;AAAA,MACT,UAAU;AAAA;AAAA;AAAA,EAMhB,qBAAqB,OAAO,eAAe;AACzC,UAAM,aAAa,QAAQ;AAC3B,UAAM,MAAM,KAAK,aAAa;AAC9B,QAAI,QAAQ,YAAY;AACtB,UAAI,YAAY;AACd,aAAK,aAAa,eAAe;AAAA,aAC5B;AACL,aAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA;AA4C7B,eAAe,OAAO,WAAW,IAAI;",
  "names": []
}
