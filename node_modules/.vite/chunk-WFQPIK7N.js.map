{
  "version": 3,
  "sources": ["../.pnpm/@polymer/iron-media-query@3.0.1/node_modules/@polymer/iron-media-query/iron-media-query.js"],
  "sourcesContent": ["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\n\n/**\n`iron-media-query` can be used to data bind to a CSS media query.\nThe `query` property is a bare CSS media query.\nThe `query-matches` property is a boolean representing whether the page matches\nthat media query.\n\nExample:\n\n```html\n<iron-media-query query=\"(min-width: 600px)\" query-matches=\"{{queryMatches}}\">\n</iron-media-query>\n```\n\n@group Iron Elements\n@demo demo/index.html\n@hero hero.svg\n@element iron-media-query\n*/\nPolymer({\n\n  is: 'iron-media-query',\n\n  properties: {\n\n    /**\n     * The Boolean return value of the media query.\n     */\n    queryMatches: {type: Boolean, value: false, readOnly: true, notify: true},\n\n    /**\n     * The CSS media query to evaluate.\n     */\n    query: {type: String, observer: 'queryChanged'},\n\n    /**\n     * If true, the query attribute is assumed to be a complete media query\n     * string rather than a single media feature.\n     */\n    full: {type: Boolean, value: false},\n\n    /**\n     * @type {function(MediaQueryList)}\n     */\n    _boundMQHandler: {\n      value: function() {\n        return this.queryHandler.bind(this);\n      }\n    },\n\n    /**\n     * @type {MediaQueryList}\n     */\n    _mq: {value: null}\n  },\n\n  attached: function() {\n    this.style.display = 'none';\n    this.queryChanged();\n  },\n\n  detached: function() {\n    this._remove();\n  },\n\n  _add: function() {\n    if (this._mq) {\n      this._mq.addListener(this._boundMQHandler);\n    }\n  },\n\n  _remove: function() {\n    if (this._mq) {\n      this._mq.removeListener(this._boundMQHandler);\n    }\n    this._mq = null;\n  },\n\n  queryChanged: function() {\n    this._remove();\n    var query = this.query;\n    if (!query) {\n      return;\n    }\n    if (!this.full && query[0] !== '(') {\n      query = '(' + query + ')';\n    }\n    this._mq = window.matchMedia(query);\n    this._add();\n    this.queryHandler(this._mq);\n  },\n\n  queryHandler: function(mq) {\n    this._setQueryMatches(mq.matches);\n  }\n\n});\n"],
  "mappings": ";;;;;AAAA,AAgCA,QAAQ;AAAA,EAEN,IAAI;AAAA,EAEJ,YAAY;AAAA,IAKV,cAAc,EAAC,MAAM,SAAS,OAAO,OAAO,UAAU,MAAM,QAAQ;AAAA,IAKpE,OAAO,EAAC,MAAM,QAAQ,UAAU;AAAA,IAMhC,MAAM,EAAC,MAAM,SAAS,OAAO;AAAA,IAK7B,iBAAiB;AAAA,MACf,OAAO,WAAW;AAChB,eAAO,KAAK,aAAa,KAAK;AAAA;AAAA;AAAA,IAOlC,KAAK,EAAC,OAAO;AAAA;AAAA,EAGf,UAAU,WAAW;AACnB,SAAK,MAAM,UAAU;AACrB,SAAK;AAAA;AAAA,EAGP,UAAU,WAAW;AACnB,SAAK;AAAA;AAAA,EAGP,MAAM,WAAW;AACf,QAAI,KAAK,KAAK;AACZ,WAAK,IAAI,YAAY,KAAK;AAAA;AAAA;AAAA,EAI9B,SAAS,WAAW;AAClB,QAAI,KAAK,KAAK;AACZ,WAAK,IAAI,eAAe,KAAK;AAAA;AAE/B,SAAK,MAAM;AAAA;AAAA,EAGb,cAAc,WAAW;AACvB,SAAK;AACL,QAAI,QAAQ,KAAK;AACjB,QAAI,CAAC,OAAO;AACV;AAAA;AAEF,QAAI,CAAC,KAAK,QAAQ,MAAM,OAAO,KAAK;AAClC,cAAQ,MAAM,QAAQ;AAAA;AAExB,SAAK,MAAM,OAAO,WAAW;AAC7B,SAAK;AACL,SAAK,aAAa,KAAK;AAAA;AAAA,EAGzB,cAAc,SAAS,IAAI;AACzB,SAAK,iBAAiB,GAAG;AAAA;AAAA;",
  "names": []
}
