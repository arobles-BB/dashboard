{
  "version": 3,
  "sources": ["../.pnpm/@vaadin/split-layout@22.0.2/node_modules/@vaadin/split-layout/theme/lumo/vaadin-split-layout-styles.js", "../.pnpm/@vaadin/split-layout@22.0.2/node_modules/@vaadin/split-layout/src/vaadin-split-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-split-layout',\n  css`\n    [part='splitter'] {\n      min-width: var(--lumo-space-s);\n      min-height: var(--lumo-space-s);\n      background-color: var(--lumo-contrast-5pct);\n      transition: 0.1s background-color;\n    }\n\n    [part='handle'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: var(--lumo-size-m);\n      height: var(--lumo-size-m);\n    }\n\n    [part='handle']::after {\n      content: '';\n      display: block;\n      width: 4px;\n      height: 100%;\n      max-width: 100%;\n      max-height: 100%;\n      border-radius: var(--lumo-border-radius-s);\n      background-color: var(--lumo-contrast-30pct);\n      transition: 0.1s opacity, 0.1s background-color;\n    }\n\n    :host([orientation='vertical']) [part='handle']::after {\n      width: 100%;\n      height: 4px;\n    }\n\n    /* Hover style */\n    [part='splitter']:hover [part='handle']::after {\n      background-color: var(--lumo-contrast-40pct);\n    }\n\n    /* Disable hover for touch devices */\n    @media (pointer: coarse) {\n      [part='splitter']:hover [part='handle']::after {\n        background-color: var(--lumo-contrast-30pct);\n      }\n    }\n\n    /* Active style */\n    [part='splitter']:active [part='handle']::after {\n      background-color: var(--lumo-contrast-50pct);\n    }\n\n    /* Small/minimal */\n    :host([theme~='small']) > [part='splitter'] {\n      border-left: 1px solid var(--lumo-contrast-10pct);\n      border-top: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    :host([theme~='small']) > [part='splitter'],\n    :host([theme~='minimal']) > [part='splitter'] {\n      min-width: 0;\n      min-height: 0;\n      background-color: transparent;\n    }\n\n    :host([theme~='small']) > [part='splitter']::after,\n    :host([theme~='minimal']) > [part='splitter']::after {\n      content: '';\n      position: absolute;\n      top: -4px;\n      right: -4px;\n      bottom: -4px;\n      left: -4px;\n    }\n\n    :host([theme~='small']) > [part='splitter'] > [part='handle']::after,\n    :host([theme~='minimal']) > [part='splitter'] > [part='handle']::after {\n      opacity: 0;\n    }\n\n    :host([theme~='small']) > [part='splitter']:hover > [part='handle']::after,\n    :host([theme~='small']) > [part='splitter']:active > [part='handle']::after,\n    :host([theme~='minimal']) > [part='splitter']:hover > [part='handle']::after,\n    :host([theme~='minimal']) > [part='splitter']:active > [part='handle']::after {\n      opacity: 1;\n    }\n\n    /* RTL specific styles */\n    :host([theme~='small'][dir='rtl']) > [part='splitter'] {\n      border-left: auto;\n      border-right: 1px solid var(--lumo-contrast-10pct);\n    }\n  `,\n  { moduleId: 'lumo-split-layout' }\n);\n", "/**\n * @license\n * Copyright (c) 2021 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { IronResizableBehavior } from '@polymer/iron-resizable-behavior/iron-resizable-behavior.js';\nimport { mixinBehaviors } from '@polymer/polymer/lib/legacy/class.js';\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { FlattenedNodesObserver } from '@polymer/polymer/lib/utils/flattened-nodes-observer.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-split-layout>` is a Web Component implementing a split layout for two\n * content elements with a draggable splitter between them.\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Horizontal and Vertical Layouts\n *\n * By default, the split's orientation is horizontal, meaning that the content elements are\n * positioned side by side in a flex container with a horizontal layout.\n *\n * You can change the split mode to vertical by setting the `orientation` attribute to `\"vertical\"`:\n *\n * ```html\n * <vaadin-split-layout orientation=\"vertical\">\n *   <div>Content on the top</div>\n *   <div>Content on the bottom</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Layouts Combination\n *\n * For the layout contents, we usually use `<div>` elements in the examples,\n * although you can use any other elements as well.\n *\n * For instance, in order to have a nested vertical split layout inside a\n * horizontal one, you can include `<vaadin-split-layout>` as a content element\n * inside another split layout:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div>First content element</div>\n *   <vaadin-split-layout orientation=\"vertical\">\n *     <div>Second content element</div>\n *     <div>Third content element</div>\n *   </vaadin-split-layout>\n * </vaadin-split-layout>\n * ```\n *\n * You can also trigger the vertical mode in JavaScript by setting the property:\n * `splitLayout.orientation = \"vertical\";`.\n *\n * ### Split Layout Element Height\n *\n * `<vaadin-split-layout>` element itself is a flex container. It does not inherit\n * the parent height by default, but rather sets its height depending on the\n * content.\n *\n * You can use CSS to set the fixed height for the split layout, as usual with any\n * block element:\n *\n * ```html\n * <vaadin-split-layout style=\"height: 200px;\">\n *   <div>First content element</div>\n *   <div>Second content element</div>\n * </vaadin-split-layout>\n * ```\n *\n * It is possible to define percentage height as well. Note that you have to set\n * the parent height in order to make percentages work correctly. In the following\n * example, the `<body>` is resized to fill the entire viewport, and the\n * `<vaadin-split-layout>` element is set to take 100% height of the `<body>`:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0;\">\n *   <vaadin-split-layout style=\"height: 100%;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * Alternatively, you can use a flexbox layout to make `<vaadin-split-layout>`\n * fill up the parent:\n *\n * ```html\n * <body style=\"height: 100vh; margin: 0; display: flex;\">\n *   <vaadin-split-layout style=\"flex: 1;\">\n *     <div>First</div>\n *     <div>Second</div>\n *   </vaadin-split-layout>\n * </body>\n * ```\n *\n * ### Initial Splitter Position\n *\n * The initial splitter position is determined from the sizes of the content elements\n * inside the split layout. Therefore, changing `width` on the content elements\n * affects the initial splitter position for the horizontal layouts, while `height`\n * affects the vertical ones.\n *\n * Note that when the total size of the content elements does not fit the layout,\n * the content elements are scaled proportionally.\n *\n * When setting initial sizes with relative units, such as percentages, it is\n * recommended to assign the size for both content elements:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"width: 75%;\">Three fourths</div>\n *   <div style=\"width: 25%;\">One fourth</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Size Limits\n *\n * The `min-width`/`min-height`, and `max-width`/`max-height` CSS size values\n * for the content elements are respected and used to limit the splitter position\n * when it is dragged.\n *\n * It is preferred to set the limits only for a single content element, in order\n * to avoid size conflicts:\n *\n * ```html\n * <vaadin-split-layout>\n *   <div style=\"min-width: 50px; max-width: 150px;\">First</div>\n *   <div>Second</div>\n * </vaadin-split-layout>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description | Theme for Element\n * ----------------|----------------|----------------\n * `splitter` | Split element | vaadin-split-layout\n * `handle` | The handle of the splitter | vaadin-split-layout\n *\n * See [Styling Components](https://vaadin.com/docs/latest/ds/customization/styling-components) documentation.\n *\n * @fires {Event} splitter-dragend - Fired after dragging the splitter have ended.\n *\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes GestureEventListeners\n */\nclass SplitLayout extends ElementMixin(\n  ThemableMixin(GestureEventListeners(mixinBehaviors([IronResizableBehavior], PolymerElement)))\n) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          overflow: hidden !important;\n          transform: translateZ(0);\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        :host([orientation='vertical']) {\n          flex-direction: column;\n        }\n\n        :host ::slotted(*) {\n          flex: 1 1 auto;\n          overflow: auto;\n          -webkit-overflow-scrolling: touch;\n        }\n\n        [part='splitter'] {\n          flex: none;\n          position: relative;\n          z-index: 1;\n          overflow: visible;\n          min-width: 8px;\n          min-height: 8px;\n        }\n\n        :host(:not([orientation='vertical'])) > [part='splitter'] {\n          cursor: ew-resize;\n        }\n\n        :host([orientation='vertical']) > [part='splitter'] {\n          cursor: ns-resize;\n        }\n\n        [part='handle'] {\n          width: 40px;\n          height: 40px;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate3d(-50%, -50%, 0);\n        }\n      </style>\n      <slot id=\"primary\" name=\"primary\"></slot>\n      <div\n        part=\"splitter\"\n        id=\"splitter\"\n        on-track=\"_onHandleTrack\"\n        on-down=\"_setPointerEventsNone\"\n        on-up=\"_restorePointerEvents\"\n      >\n        <div part=\"handle\"></div>\n      </div>\n      <slot id=\"secondary\" name=\"secondary\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-split-layout';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The split layout's orientation. Possible values are: `horizontal|vertical`.\n       * @type {string}\n       */\n      orientation: {\n        type: String,\n        reflectToAttribute: true,\n        value: 'horizontal'\n      },\n\n      /** @private */\n      _previousPrimaryPointerEvents: String,\n\n      /** @private */\n      _previousSecondaryPointerEvents: String\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.__observer = new FlattenedNodesObserver(this, this._processChildren);\n  }\n\n  /** @private */\n  _processChildren() {\n    this.getEffectiveChildren().forEach((child, i) => {\n      if (i === 0) {\n        this._primaryChild = child;\n        child.setAttribute('slot', 'primary');\n      } else if (i == 1) {\n        this._secondaryChild = child;\n        child.setAttribute('slot', 'secondary');\n      } else {\n        child.removeAttribute('slot');\n      }\n    });\n  }\n\n  /** @private */\n  _setFlexBasis(element, flexBasis, containerSize) {\n    flexBasis = Math.max(0, Math.min(flexBasis, containerSize));\n    if (flexBasis === 0) {\n      // Pure zero does not play well in Safari\n      flexBasis = 0.000001;\n    }\n    element.style.flex = '1 1 ' + flexBasis + 'px';\n  }\n\n  /** @private */\n  _setPointerEventsNone(event) {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n    this._previousPrimaryPointerEvents = this._primaryChild.style.pointerEvents;\n    this._previousSecondaryPointerEvents = this._secondaryChild.style.pointerEvents;\n    this._primaryChild.style.pointerEvents = 'none';\n    this._secondaryChild.style.pointerEvents = 'none';\n\n    event.preventDefault();\n  }\n\n  /** @private */\n  _restorePointerEvents() {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n    this._primaryChild.style.pointerEvents = this._previousPrimaryPointerEvents;\n    this._secondaryChild.style.pointerEvents = this._previousSecondaryPointerEvents;\n  }\n\n  /** @private */\n  _onHandleTrack(event) {\n    if (!this._primaryChild || !this._secondaryChild) {\n      return;\n    }\n\n    var size = this.orientation === 'vertical' ? 'height' : 'width';\n    if (event.detail.state === 'start') {\n      this._startSize = {\n        container: this.getBoundingClientRect()[size] - this.$.splitter.getBoundingClientRect()[size],\n        primary: this._primaryChild.getBoundingClientRect()[size],\n        secondary: this._secondaryChild.getBoundingClientRect()[size]\n      };\n\n      return;\n    }\n\n    var distance = this.orientation === 'vertical' ? event.detail.dy : event.detail.dx;\n    const isRtl = this.orientation !== 'vertical' && this.getAttribute('dir') === 'rtl';\n    const dirDistance = isRtl ? -distance : distance;\n\n    this._setFlexBasis(this._primaryChild, this._startSize.primary + dirDistance, this._startSize.container);\n    this._setFlexBasis(this._secondaryChild, this._startSize.secondary - dirDistance, this._startSize.container);\n\n    this.notifyResize();\n\n    if (event.detail.state === 'end') {\n      this.dispatchEvent(new CustomEvent('splitter-dragend'));\n\n      delete this._startSize;\n    }\n  }\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize() {\n    // NOTE: we have this method here to include it to the API docs,\n    // as we do not use `IronResizableBehavior` in type definitions.\n    super.notifyResize();\n  }\n\n  /**\n   * Fired when the splitter is dragged. Non-bubbling. Fired for the splitter\n   * element and any nested elements with `IronResizableBehavior`.\n   *\n   * DEPRECATED: This event will be dropped in one of the future Vaadin versions. Use a ResizeObserver instead.\n   * @event iron-resize\n   */\n\n  /**\n   * Fired after dragging the splitter have ended.\n   *\n   * @event splitter-dragend\n   */\n}\n\ncustomElements.define(SplitLayout.is, SplitLayout);\n\nexport { SplitLayout };\n"],
  "mappings": "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",
  "names": []
}
